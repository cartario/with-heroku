{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","data","setData","data2","setData2","form","setForm","useEffect","fetch","then","res","json","className","message","value","onChange","e","target","onClick","axios","post","db","map","item","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMAqCeA,MAlCf,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNC,EADM,KACAC,EADA,OAEaF,mBAAS,IAFtB,mBAENG,EAFM,KAECC,EAFD,OAGWJ,mBAAS,IAHpB,mBAGNK,EAHM,KAGAC,EAHA,KAkBb,OALAC,qBAAU,WACRC,MAAM,oDAAoDC,MAAK,SAACC,GAAD,OAAOA,EAAIC,UAAQF,MAAK,SAACE,GAAD,OAAQT,EAAQS,QAEtG,IAGD,sBAAKC,UAAU,MAAf,UACE,6CACGX,EAAKY,QAAUZ,EAAKY,QAAU,GACjC,uBACA,uBACEC,MAAOT,EACPU,SApBe,SAACC,GACpBV,EAAQU,EAAEC,OAAOH,UAqBf,wBAAQI,QAlBS,WACnBC,IAAMC,KAAK,mDAAoD,CAACP,QAASR,IAAOI,MAAK,SAACC,GAAD,OAAON,EAASM,EAAIT,KAAKoB,QAiB5G,kBACA,gDACGlB,GAASA,EAAMmB,KAAI,SAACC,GAAD,OAAQ,4BAAIA,WCpBzBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4f96c748.chunk.js","sourcesContent":["import {useEffect, useState} from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [data, setData] = useState(\"\"); \n  const [data2, setData2] = useState(\"\"); \n  const [form, setForm] = useState(\"\"); \n\n  const handleChange = (e) => {\n    setForm(e.target.value)\n  }\n\n  const handleSubmit = () => {\n    axios.post(\"https://v-201189-simple-chat.herokuapp.com/hello\", {message: form}).then((res)=>setData2(res.data.db));\n  }\n\n  useEffect(()=> {\n    fetch(\"https://v-201189-simple-chat.herokuapp.com/hello\").then((res)=>res.json()).then((json)=>setData(json));\n    \n  }, [])\n\n  return (\n    <div className=\"App\">\n      <p>get request:</p>\n      {!!data.message ? data.message : \"\"}\n      <br/>\n      <input \n        value={form}\n        onChange ={handleChange}\n      />\n      <button onClick = {handleSubmit}>Send</button>\n      <p>post request:</p>\n      {!!data2 && data2.map((item)=><p>{item}</p>)}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}